
Implementation is done using AVL Trees.


INPUT FORMAT:
>First Line accepts an integer n that is equal to number of horizontal line segments
>Second Line accepts an integer m that is equal to number of  vertical line segments
>Next n Lines contans a 4 tuple that is equal to x1, y1, x2, y2 ______The starting and ending coordinates of the Horizontal segment
>Next m Lines contans a 4 tuple that is equal to x1, y1, x2, y2 ______The starting and ending coordinates of the Vertical segment

OUTPUT FORMAT:
Each New line contains a new Line of Intersection

Note:
The code successfully handles the corner cases like T type (Test Case 3) and L type (Test Case 4) intersections.
Here are the sample inputs to test Run the code.

Sample Input 0

1
1
1 2 3 2

3 2 3 3
 

 Sample Input 1

4
4
2 4 6 4
3 8 9 8
5 1 8 1
0 9 9 9

2 2 2 5
5 1 5 9
1 7 1 9
7 3 7 7
 

Sample Input 2

3
2

3 6 5 6
2 4 5 4 
1 3 2 3

4 3 4 7
7 2 7 6

Sample Input 3

6
3

3 6 5 6
2 4 5 4 
1 3 2 3
5 5 9 5
6 7 10 7
7 1 11 1

4 3 4 7
7 2 7 6
10 1 10 9


* Sample Input 4

1
1

1 1 5 1

5 1 5 5























